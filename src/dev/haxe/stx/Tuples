package stx;

using Prelude;
using stx.Tuples;

typedef Tups            = Tuples;

typedef T2<A,B>         = Tuple2<A,B>
typedef Tuple2<A,B>       = Tuple2<A,B>;

typedef T3<A,B,C>       = Tuple3<A,B,C>
typedef Tuple3<A,B,C>     = Tuple3<A,B,C>;

typedef T4<A,B,C,D>     = Tup4<A,B,C,D>
typedef Tup4<A,B,C,D>   = Tuple4<A,B,C,D>;

typedef T5<A,B,C,D,E>   = Tup5<A,B,C,D,E>
typedef Tup5<A,B,C,D,E> = Tuple5<A,B,C,D,E>;

typedef KV<V>           = Tuple2<String,V>;

class Entuple{
  static public function entuple<A,B>(a:A,b:B){
    return Tuples.tuple2(a,b);
  }
}
@:noUsing class Tuples {	
	@:noUsing static public function tuple2<A,B>(_1:A,_2:B):stx.Tuple2<A,B>{
		return new Tuple2(_1, _2);
	}
	@:noUsing static public function tuple3<A,B,C>(_1:A,_2:B,_3:C):stx.Tuple3<A,B,C>{
		return new Tuple3(_1, _2, _3);
	}
	@:noUsing static public function tuple4<A,B,C,D>(_1:A,_2:B,_3:C,_4:D):stx.Tuple4<A,B,C,D>{
		return new Tuple4(_1, _2, _3, _4);
	}
	@:noUsing static public function tuple5<A,B,C,D,E>(_1:A,_2:B,_3:C,_4:D,_5:E):stx.Tuple5<A,B,C,D,E>{
		return new Tuple5(_1, _2, _3, _4, _5);
	}
}
class Elements{
  static public inline function elements(p:Product):Array<Dynamic>{
    return p.elements();
  }
}
interface Product {
  public var prefix(get_prefix, null): String;

  public var length(get_length,null) : Int;

  public function element(n: Int): Dynamic;
  public function elements():Array<Dynamic>;

  public function flatten():Array<Dynamic>;
}

class AbstractProduct implements Product {
	@:note('0b1kn00b', 'As these values are used and set privately, the chances of error are slight')
	private var tools : Array<Function1<Dynamic,Dynamic>>;
	
  public var prefix (get_prefix, null): String;

  public var length(get_length, null): Int;

  public var _elements: Array<Dynamic>;

  public function new(elements: Array<Dynamic>) {
    _elements = elements;
  }

  public function element(n: Int): Dynamic {
    return _elements[n];
  }

  public function toString(): String {
    var s = prefix + "(" + stx.Show.getShowFor(element(0))(element(0));
    for(i in 1...length)
      s += ", " + stx.Show.getShowFor(element(i))(element(i));
    return s + ")";
  }
  private function get_prefix(): String {
    return except()("Not implemented");
  }

  private function get_length(): Int {
    return except()("Not implemented");
  }
  
  public function elements():Array<Dynamic> {
    return switch (length) {
      case 5  : 
          var p : Tuple5<Dynamic,Dynamic,Dynamic,Dynamic,Dynamic> = cast(this);
          [ p.fst() , p.snd() , p.thd() , p.frt(), p.fth() ];
      case 4  :
          var p : Tuple4<Dynamic,Dynamic,Dynamic,Dynamic> = cast(this);
          [ p.fst() , p.snd() , p.thd() , p.frt() ];
      case 3  :
          var p : Tuple3<Dynamic,Dynamic,Dynamic> = cast(this);
          [ p.fst() , p.snd() , p.thd() ];
      case 2  :
          var p : Tuple2<Dynamic,Dynamic> = cast(this);
          [ p.fst() , p.snd() ];
      default : [];
    }
  }
  public function flatten():Array<Dynamic> {
    var flatn : Product -> Array<Dynamic> = null;

    flatn = function(p:Product){
          return 
            p.elements().flatMap(
              function(v){
                return if( Std.is(v,Product) ){
                   flatn(v).flatMap(  Compose.unit() );
                }else{
                  [v];
                }
              }
            );
          }
    return flatn(this);
  }
}
typedef Pair<A> = Tuple2<A,A>;

class Pairs{
  static public function bothOrOtherWith<A,B>(tp:Pair<A>,red:Reducer<A>):A{
    return 
      tp.fst() == null ? tp.snd() : red(tp.fst(),tp.snd());
  }
  static public function map<A,B>(tpl:Tuple2<A,A>,fn:A->B):Tuple2<B,B>{
    return Tuple2.fromArray( tpl.elements().map(fn) );
  }
}
class Tuple2<A, B> extends AbstractProduct {
  @:noUsing
  static public inline function create<A, B>(_1: A, _2: B): stx.Tuple2<A, B> {
    return Tuples.tuple2(_1, _2);
  }
  public var _1 (default, null): A;
  public var _2 (default, null): B;

	public function new (_1:A, _2:B) {
		this._1 = _1;
		this._2 = _2;
		super([_1,_2]);
	}
  @:noUsing static public function fromArray(a:Array<Dynamic>){
    return new Tuple2(a[0],a[1]);
  }
  @:noUsing static public function unit(){
    return new Tuple2(null,null);
  }
	static public function entuple<A, B, C>(t:stx.Tuple2<A,B>,c:C): stx.Tuple3<A, B, C> {
    return new Tuple3(t.fst(), t.snd(), c);
  }
  static inline public function tupled<A,B,C>(f : A -> B -> C){
    return function(t:Tuple2<A,B>){
        return into(t,f);
    }
  }
	static inline public function into<A,B,C>(t:Tuple2<A,B>, f : A -> B -> C ) : C{
    return f(t.fst(), t.snd());
  }
  public inline function fst():A { return _1; }
  public inline function snd():B { return _2; }

  static public function map<A,B,C,D>(t:Tuple2<A,B>,f1: A -> C, f2: B -> D):Tuple2<C,D>{
    return f1(t.fst()).entuple(f2(t.snd()));
  }
  static public function swap<A,B>(t:Tuple2<A,B>):Tuple2<B,A>{
    return Tuples.tuple2(t.snd(),t.fst());
  }
  override private function get_prefix(): String {
    return "stx.Tuple2";
  }
  override private function get_length(): Int {
    return 2;
  }
}
class Tuple3<A, B, C> extends AbstractProduct {
  @:noUsing
  static public function create<A, B, C>(_1: A, _2: B, _3: C): stx.Tuple3<A, B, C> {
    return Tuples.tuple3(_1, _2, _3);
  }
  public var _1 (default, null) : A;
  public var _2 (default, null) : B;
	public var _3	(default, null) : C;
	
	public function new (_1:A, _2:B, _3:C) {
		this._1 = _1;
		this._2 = _2;
		this._3 = _3;
		super([_1, _2, _3]);
	}
	static public function into<A,B,C,D>(t:Tuple3<A,B,C>,f : A -> B -> C -> D) : D {
		return f(t._1, t._2, t._3);
	}
  static public inline function tupled<A,B,C,D>(f : A -> B -> C -> D){
    return 
      function(t:Tuple3<A,B,C>){
        return into(t,f);
      }
  }
  public inline function fst():A { return _1; }
  public inline function snd():B { return _2; }
  public inline function thd():C { return _3; }

  @:noUsing
  static public function fromArray<A>(a:Array<A>):Tuple3<A,A,A>{
    return new Tuple3(a[0],a[1],a[2]);
  }
  static public function map<A,B,C,D,E,F>(t:Tuple3<A,B,C>,f1: A -> D, f2: B -> E, f3 : C -> F):Tuple3<D,E,F>{
    return Tuples.tuple3(f1(t.fst()),f2(t.snd()),f3(t.thd()));
  }
	static public function entuple<A, B, C, D>(t:stx.Tuple3<A,B,C>,d:D): stx.Tuple4<A, B, C, D> {
    return new Tuple4(t._1, t._2, t._3, d);
  }
	
  override private function get_prefix(): String {
    return "stx.Tuple3";
  }

  override private function get_length(): Int {
    return 3;
  }
}
class Tuple4< A, B, C, D> extends AbstractProduct {
  @:noUsing
  static public function create<A, B, C, D>(_1: A, _2: B, _3: C, _4: D): stx.Tuple4<A, B, C, D> {
    return Tuples.tuple4(_1, _2, _3, _4);
  }
  public var _1 (default, null): A;
  public var _2 (default, null): B;
  public var _3 (default, null): C;
  public var _4 (default, null): D;

  public function new(first: A, second: B, third: C, fourth: D) {
    super([first, second, third, fourth]);

    this._1 = first; this._2 = second; this._3 = third; this._4 = fourth;
  }

  public inline function fst():A { return _1; }
  public inline function snd():B { return _2; }
  public inline function thd():C { return _3; }
  public inline function frt():D { return _4; }

	@:noUsing
  static public function fromArray<A>(a:Array<A>):Tuple4<A,A,A,A>{
    return new Tuple4(a[0],a[1],a[2],a[3]);
  }
	static public function into<A,B,C,D,E>(t:Tuple4<A,B,C,D>,f : A -> B -> C -> D -> E) : E
		return f(t.fst(), t.snd(), t.thd(), t.frt());

  inline static public function tupled<A,B,C,D,E>(f : A -> B -> C -> D -> E){
    return 
      function(t:Tuple4<A,B,C,D>){
        return into(t,f);
      }
  }
	
  override private function get_prefix(): String {
    return "stx.Tuple4";
  }

  override private function get_length	(): Int {
    return 4;
  }

  public function entuple<E>(_5: E): stx.Tuple5<A, B, C, D, E> {
    return stx.Tuples.tuple5(_1, _2, _3, _4, _5);
  }
}

class Tuple5< A, B, C, D, E> extends AbstractProduct {
  @:noUsing
  static public function create<A, B, C, D, E>(_1: A, _2: B, _3: C, _4: D, _5: E): stx.Tuple5<A, B, C, D, E> {
    return Tups.tuple5(_1, _2, _3, _4, _5);
  }
  public var _1 (default, null): A;
  public var _2 (default, null): B;
  public var _3 (default, null): C;
  public var _4 (default, null): D;
  public var _5 (default, null): E;

  public function new(first: A, second: B, third: C, fourth: D, fifth: E) {
    super([first, second, third, fourth, fifth]);

    this._1 = first; this._2 = second; this._3 = third; this._4 = fourth; this._5 = fifth;
  }
  public inline function fst():A { return _1; }
  public inline function snd():B { return _2; }
  public inline function thd():C { return _3; }
  public inline function frt():D { return _4; }
  public inline function fth():E { return _5; }


  @:noUsing
  static public function fromArray(a:Array<Dynamic>){
    return new Tuple5(a[0],a[1],a[2],a[3],a[4]);
  }
  inline static public function tupled<A,B,C,D,E,F>(f : A -> B -> C -> D -> E -> F){
    return 
      function(t:Tuple5<A,B,C,D,E>){
        return into(t,f);
      }
  }
	static public function into<A,B,C,D,E,F>(t:Tuple5<A,B,C,D,E>,f : A -> B -> C -> D -> E -> F) : F
		return f(t.fst(), t.snd(), t.thd(), t.frt(), t.fth());
	
  override public function get_prefix(): String {
    return "stx.Tuple5";
  }

  override private function get_length(): Int {
    return 5;
  }
}
class T2s{
  static public inline function first<A, B>(t : Tuple2<A, B>):A return t._1;
  static public inline function second<A, B>(t : Tuple2<A, B>):B return t._2;
  
  static public inline function fst<A, B>(t : Tuple2<A, B>):A return t._1;
  static public inline function snd<A, B>(t : Tuple2<A, B>):B return t._2;

  //static public inline function bothOrNone<A,B>(t : Tuple2<A,Option<B>):Option<
  static inline public function into<A,B,C>(t:Tuple2<A,B>, f : A -> B -> C ) : C{
    return f(t.fst(), t.snd());
  }
}
class T3s{
  static public inline function fst<A, B, C>(t : Tuple3<A, B, C>) return t._1;
  static public inline function snd<A, B, C>(t : Tuple3<A, B, C>) return t._2;
  static public inline function thd<A, B, C>(t : Tuple3<A, B, C>) return t._3;
  static public inline function first<A, B>(t : Tuple2<A, B>):A return t._1;
  static public inline function second<A, B>(t : Tuple2<A, B>):B return t._2;
  static public inline function third<A, B, C>(t : stx.Tuple3<A, B, C>):C return t._3;

  static public inline function tag<A,B,C>(t:Tuple3<A,B,C>,a,b,c):Dynamic{
    var o = {};
    Reflect.setField(o,a,t.fst());
    Reflect.setField(o,b,t.snd());
    Reflect.setField(o,c,t.thd());
    return o;
  }
}
class T4s{
  static public inline function fst<A, B, C, D>(t : Tuple4<A, B, C, D>):A return t._1;
  static public inline function snd<A, B, C, D>(t : Tuple4<A, B, C, D>):B return t._2;
  static public inline function thd<A, B, C, D>(t : Tuple4<A, B, C, D>):C return t._3;
  static public inline function frt<A, B, C, D>(t : Tuple4<A, B, C, D>):D return t._4;
  static public inline function first<A, B, C, D>(t : stx.Tuple4<A, B, C, D>):A   return t._1;
  static public inline function second<A, B, C, D>(t : stx.Tuple4<A, B, C, D>):B  return t._2;
  static public inline function third<A, B, C, D>(t : stx.Tuple4<A, B, C, D>):C   return t._3;
  static public inline function fourth<A, B, C, D>(t : stx.Tuple4<A, B, C, D>):D  return t._4;
}
class T5s{
  static public inline function fst<A, B, C, D, E>(t : Tuple5<A, B, C, D, E>):A return t._1;
  static public inline function snd<A, B, C, D, E>(t : Tuple5<A, B, C, D, E>):B return t._2;
  static public inline function thd<A, B, C, D, E>(t : Tuple5<A, B, C, D, E>):C return t._3;
  static public inline function frt<A, B, C, D, E>(t : Tuple5<A, B, C, D, E>):D return t._4;
  static public inline function fth<A, B, C, D, E>(t : Tuple5<A, B, C, D, E>):E return t._5;
  static public inline function first<A, B, C, D, E>(t : stx.Tuple5<A, B, C, D, E>)   return t._1;
  static public inline function second<A, B, C, D, E>(t : stx.Tuple5<A, B, C, D, E>)  return t._2;
  static public inline function third<A, B, C, D, E>(t : stx.Tuple5<A, B, C, D, E>)   return t._3;
  static public inline function fourth<A, B, C, D, E>(t : stx.Tuple5<A, B, C, D, E>)  return t._4;
  static public inline function fifth<A, B, C, D, E>(t : stx.Tuple5<A, B, C, D, E>)   return t._5;
}