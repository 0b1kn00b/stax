{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JExtr",
				"JExtractorFunction2	stx.io.json.Transcode"
			],
			[
				"TRan",
				"Transformers2	stx.Transformers"
			],
			[
				"Trans",
				"Transformers	class"
			],
			[
				"Abs",
				"AbstractMethodError	stx.err"
			],
			[
				"Ma",
				"MapExtractors"
			],
			[
				"Extrac",
				"ExtractorFunction	class"
			],
			[
				"Tuple2",
				"Tuple2JValue"
			],
			[
				"extract",
				"extractor"
			],
			[
				"extrac",
				"extractWith	function"
			],
			[
				"Extr",
				"Extractor"
			],
			[
				"Exc",
				"Extractor"
			],
			[
				"ex",
				"extractor"
			],
			[
				"Option",
				"OptionJValue"
			],
			[
				"Str",
				"StringJValue"
			],
			[
				"Float",
				"FloatJValue"
			],
			[
				"decom",
				"decomposer"
			],
			[
				"Bo",
				"BoolJValue"
			],
			[
				"extr",
				"extract"
			],
			[
				"get",
				"getExtractorFor"
			],
			[
				"TRans",
				"Transcodes	stx.io.json.Transcode"
			],
			[
				"tra",
				"transcoders"
			],
			[
				"re",
				"resolveClass"
			],
			[
				"fore",
				"foreachR"
			],
			[
				"Equ",
				"EqualFunction	stx.Prelude"
			],
			[
				"getEqul",
				"getEqualFor"
			],
			[
				"Equa",
				"Equal	stx.plus"
			],
			[
				"Eq",
				"Equal	SCore"
			],
			[
				"ge",
				"getOrElseC"
			],
			[
				"keyE",
				"keyEqual"
			],
			[
				"getOrE",
				"getOrElseC"
			],
			[
				"getOrEl",
				"getOrElse"
			],
			[
				"set",
				"setKeyEqual"
			],
			[
				"In",
				"Injector"
			],
			[
				"to",
				"toThunk"
			],
			[
				"Dire",
				"Directory"
			],
			[
				"File",
				"FileSystem"
			],
			[
				"len",
				"length"
			],
			[
				"di",
				"Directory"
			],
			[
				"path",
				"pathify"
			],
			[
				"Cod",
				"CodeBlock	stx.Prelude"
			],
			[
				"stat",
				"stateOf"
			],
			[
				"FileSt",
				"FileSystem	sys"
			],
			[
				"e",
				"equal"
			],
			[
				"Oo",
				"Options"
			],
			[
				"getE",
				"getEqualFor"
			],
			[
				"is",
				"isNotNull"
			],
			[
				"for",
				"foreachR"
			],
			[
				"wait",
				"waitfold"
			],
			[
				"fi",
				"field"
			],
			[
				"Iter",
				"Iteratee	class"
			],
			[
				"ITer",
				"Iteratee	class"
			],
			[
				"Ite",
				"Iteratee	class"
			],
			[
				"Prelu",
				"PreludeTest"
			],
			[
				"rea",
				"read"
			],
			[
				"STate",
				"StateTest"
			],
			[
				"field",
				"fieldvalue"
			],
			[
				"fiel",
				"fieldname"
			],
			[
				"int",
				"interval	var"
			],
			[
				"inter",
				"intervals	var"
			],
			[
				"A",
				"AbstractIFrameIO	class"
			],
			[
				"c",
				"charCodeAt( index : Int )	Null<Int>"
			],
			[
				"ele",
				"element( n : Int )	Dynamic"
			],
			[
				"Jvalue",
				"JValueExtensions	class"
			],
			[
				"Tr",
				"TranscodeJValueExtensions	class"
			],
			[
				"t",
				"text	package"
			],
			[
				"db",
				"dbapi"
			],
			[
				"res",
				"response"
			],
			[
				"Api",
				"ApiBase"
			],
			[
				"proto",
				"prototype"
			],
			[
				"ty",
				"typearr"
			],
			[
				"in",
				"instantiate"
			],
			[
				"cla",
				"className"
			],
			[
				"prto",
				"prototype"
			],
			[
				"prot",
				"prototype"
			],
			[
				"ar",
				"arity"
			],
			[
				"fun",
				"function"
			],
			[
				"Auh",
				"AuthRedis"
			],
			[
				"Funct",
				"Function"
			],
			[
				"Off",
				"OFF_state"
			],
			[
				"init",
				"initial_to_OFF"
			],
			[
				"ini",
				"initial_to_OFF [function]"
			],
			[
				"initSta",
				"initStateNameAct"
			],
			[
				"are",
				"areEqual"
			],
			[
				"tr",
				"transitionLog"
			],
			[
				"from",
				"fromUserSig"
			],
			[
				"isN",
				"isNotNull(...) : Void"
			],
			[
				"Async",
				"AsyncTest"
			],
			[
				"AS",
				"AsyncFactory [class]"
			],
			[
				"myC",
				"myCurState(get_myCurState,set_myCurState) [var]"
			],
			[
				"bi",
				"bindl"
			],
			[
				"s",
				"split(...) : Event, Unknown<3>>>"
			],
			[
				"prom",
				"promote( Void , (Unknown<1> ) : Void)"
			],
			[
				"prune",
				"pruneUnusedEvents"
			],
			[
				"en",
				"event() : Event>"
			],
			[
				"const",
				"constant() : EightStateMachine>"
			],
			[
				"con",
				"constant() : EightStateMachine>"
			],
			[
				"Metho",
				"Method1 [class]"
			],
			[
				"Event",
				"EventDispatcher [class]"
			],
			[
				"run",
				"run(...) : Void"
			],
			[
				"han",
				"handler"
			],
			[
				"even",
				"eventListener [function]"
			],
			[
				"Ast",
				"AsyncFactory [class]"
			],
			[
				"munit",
				"munitHandler"
			],
			[
				"Ei",
				"EightStateMachineTest [class]"
			],
			[
				"mun",
				"munitHandler"
			],
			[
				"isT",
				"isTrue(...) : Void"
			],
			[
				"com",
				"compareMethods(...) : Bool"
			],
			[
				"m",
				"compareMethods(...) : Bool"
			],
			[
				"comp",
				"compareStoF"
			],
			[
				"hsm",
				"hsm_currentState"
			],
			[
				"paren",
				"parentFunc"
			],
			[
				"Sta",
				"State [class]"
			],
			[
				"ME",
				"Method1 [class]"
			],
			[
				"s_",
				"s_root"
			],
			[
				"enu",
				"enumParameters(...) : Array<Dynamic>"
			],
			[
				"lo",
				"log [package]"
			],
			[
				"Loc",
				"LogLevel [class]"
			],
			[
				"matc",
				"match( s : String ) : Bool"
			],
			[
				"cr",
				"createElement( name : String ) : Xml"
			],
			[
				"n",
				"fn : Null<com.troyworks.core.cogs.State>"
			],
			[
				"or",
				"orAlways(...) : CacheObject>"
			],
			[
				"hsm_s_A",
				"hsm_s_Active [function]"
			],
			[
				"parn",
				"parentFunc [var]"
			],
			[
				"requ",
				"requestTranNoInit [function]"
			],
			[
				"target",
				"targetState"
			],
			[
				"_hsm",
				"_hsm_initState [var]"
			],
			[
				"Stat",
				"StateMachine [class]"
			],
			[
				"hsm_c",
				"hsm_currentState(default,setHsm_currentState) [var]"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/HaXe/Hxml.sublime-build",
	"command_palette":
	{
		"height": 127.0,
		"selected_items":
		[
			[
				"jslin",
				"JSLint: Run JSLint"
			],
			[
				"jsli",
				"JSLint: Run JSLint"
			],
			[
				"jsl",
				"JSLint: Run JSLint"
			],
			[
				"jslint",
				"JSLint: Run JSLint"
			],
			[
				"j",
				"JSLint: Run JSLint"
			],
			[
				"js",
				"JSLint: Show JSLint Result"
			],
			[
				"JSL",
				"JSLint: Run JSLint"
			],
			[
				"JSli",
				"JSLint: Run JSLint"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"ja",
				"Set Syntax: Jade"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"pack	",
				"Package Control: Install Package"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"x",
				"Set Syntax: XML"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"packa	",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Package Control: Discover Packages"
			],
			[
				"pack",
				"Package Control: Add Repository"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"INS",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Inst",
				"Package Control: Install Package"
			],
			[
				"ke",
				"Preferences: Key Bindings - Default"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"Instal",
				"Package Control: Install Package"
			],
			[
				"bin",
				"Preferences: Global Settings - User"
			]
		],
		"width": 536.0
	},
	"console":
	{
		"height": 205.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/world/stack/prj/lib/stx-core/0,0,2,2/haxelib.xml",
		"/C/Users/dayz/AppData/Local/Temp/7zO72E7.tmp/Dynamics.hx",
		"/C/Users/dayz/AppData/Local/Temp/7zO54CB.tmp/Dates.hx",
		"/C/world/stack/projects/stax/bin/stx-core/stx/Enums.hx",
		"/C/world/stack/projects/stax/bin/stx-core/stx/Mapes.hx",
		"/C/world/stack/projects/stax/src/test/core/build.hxml",
		"/C/world/stack/prj/lib/stx-core/0,0,2,2/stx/plus/Order.hx",
		"/C/world/stack/prj/lib/stx-core/0,0,2,2/stx/Dynamics.hx",
		"/C/world/stack/projects/stax/src/test/core/AllClasses.hx",
		"/C/world/stack/projects/stax/bin/.tmp/stx/io/json/Json.hx",
		"/C/world/stack/projects/stax/src/test/core/Main.hx",
		"/C/world/stack/projects/stax/bin/.tmp/haxelib.xml",
		"/C/world/stack/projects/stax/bin/stx-core/SCore.hx",
		"/C/world/stack/projects/stax/bin/.tmp/stx/Maths.hx",
		"/C/world/stack/projects/stax/bin/.tmp/stx/io/json/JValue.hx",
		"/C/world/stack/projects/stax/bin/.tmp/stx/io/json/Transcode.hx",
		"/C/world/stack/projects/stax/tools/Core.hx",
		"/C/world/stack/projects/stax/src/main/haxe/SCore.hx",
		"/C/world/stack/prj/lib/stx-core/0,0,2,2/stx/Functions.hx",
		"/C/world/stack/projects/stax/bin/.tmp/stx/Dates.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/io/json/TranscodeJValuesTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/Transcode.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json[untyped serialization format with typed anonymous tuples, meh]/Transcode.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json[untyped serialization format with typed anonymous tuples, meh]/Json.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/Json.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/JValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/http/HttpJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/js/io/IFrameIO.hx",
		"/C/world/stack/projects/stax/bin/.tmp/stx/Arrays.hx",
		"/C/world/stack/projects/stax/build.hxml",
		"/C/world/stack/projects/stax/src/test/haxe/StaxTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/DateJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/StringJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/BoolJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/io/json/JValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/Extractor.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/io/json/JsonTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/ArrayJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/ObjectJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/OptionJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/Tuple2JValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/Tuple3JValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/Tuple4JValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/Tuple5JValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/IntJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/FloatJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/ds/SetJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/ds/MapJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/ds/ListJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/Decomposer.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Transformers.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/error/AbstractMethodError.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/io/http/HttpJValueJsonpTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/types/stx/AbstractProductJValue.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/io/json/JValueTest.hx",
		"/C/world/stack/projects/stax/[Finished in 2.2s with exit code 1]./src/main/haxe/stx/io/json/types/stx/ds/SetJValue.hx",
		"/C/world/stack/projects/stax/[Finished in 2.5s]./src/main/haxe/stx/io/json/types/stx/OptionJValue.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/io/json/JsonGenerator.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/CollectionsJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Types.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/JValues.hx",
		"/C/world/stack/projects/stax/[Finished in 2.6s with exit code 1]./src/main/haxe/stx/io/json/Decomposer.hx",
		"/C/world/stack/projects/stax/[Finished in 2.6s with exit code 1]./src/main/haxe/stx/io/json/Extractor.hx",
		"/C/world/stack/projects/stax/[Finished in 2.9s with exit code 1]./src/main/haxe/stx/io/json/Extractor.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/TranscodeJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Bools.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Strings.hx",
		"/C/world/stack/projects/stax/[Finished in 2.9s]./src/main/haxe/stx/io/json/Decomposer.hx",
		"/C/world/stack/projects/stax/[Finished in 1.1s]./src/main/haxe/stx/io/json/Extractor.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/TranscodeJValues.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Iterables.hx",
		"/C/world/stack/projects/stax/src/main/haxe/Prelude.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Arrays.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/PrimitivesJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/TranscodeMap.hx",
		"/C/world/stack/projects/stax/bin/.tmp/AllClasses.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/error/Error.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Tuples.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/io/json/JsonBenchmark.hx",
		"/C/world/stack/projects/stax/bin/.tmp/bin/stx-core/stx/error/Error.hx",
		"/C/world/stack/projects/stax/bin/.tmp/.mlib",
		"/C/world/stack/projects/stax/bin/.tmp/Stx.hx",
		"/C/world/stack/projects/stax/bin/.tmp/Prelude.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/plus/Show.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/plus/Order.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/ds/Map.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/ds/List.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/ArraysTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/plus/Hasher.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx.ds.ifs.Foldable.hx",
		"/C/world/stack/projects/stax/src/test/haxe/StaxTestSuite.hx",
		"/C/world/stack/projects/stax/[Finished in 1.5s]./src/test/haxe/stx/io/json/JsonTest.hx",
		"/C/world/stack/projects/stax/[Finished in 1.2s]./src/main/haxe/stx/io/json/JValues.hx",
		"/C/world/stack/projects/stax/[Finished in 1.2s]./src/main/haxe/stx/io/json/CollectionsJValue.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/http/Http.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/plus/Equal.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/plus/EqualTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Options.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/PromiseTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/Promises.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/ds/MapTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/test/Runner.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/plus/OrderTest.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/plus/ShowTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx.ds.Foldables.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/test/TestHandler.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/test/MustMatchers.hx",
		"/C/world/stack/projects/stax/src/main/avm2/stx/ds/List.as",
		"/C/world/stack/projects/stax/src/main/avm2/stx/ds/Map.as",
		"/C/world/stack/projects/stax/src/main/avm2/stx/ds/Set.as",
		"/C/world/stack/projects/stax/src/main/avm2/stx/math/tween/Tween.as",
		"/C/world/stack/projects/stax/src/main/avm2/stx/reactive/SignalCollection.as",
		"/C/world/stack/projects/stax/src/main/avm2/stx/reactive/SignalCollectionExtensions.as",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/http/HttpString.hx",
		"/C/world/stack/projects/stax/src/test/haxe/js/io/IFrameIOTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/net/Urls.hx",
		"/C/world/stack/projects/stax/src/test/haxe/js/dom/HTMLElementsTest.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/util/ObjectsTest.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/ObjectsTest.hx",
		"/C/world/stack/projects/stax/src/test/haxe/js/dom/HTMLDocumentsTest.hx",
		"/C/world/stack/projects/stax/[Finished in 2.7s]./src/main/haxe/stx/io/http/HttpJValue.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/io/http/HttpStringTest.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/io/json/TranscodeJValueExtensions.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/reactive/SignalCollection.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/reactive/SignalCollectionExtensions.hx",
		"/C/world/stack/projects/stax/src/main/haxe/stx/reactive/Streams.hx",
		"/C/world/stack/projects/stax/src/test/haxe/stx/reactive/ReactiveTester.hx",
		"/C/world/stack/projects/stax/src/main/haxe/AllClasses.hx"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\io\\json\\types",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src\\test\\haxe",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\main",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\reactive",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\js",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\test",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src\\test",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax",
			"C:\\world\\stack\\projects\\stax\\src",
			"stx.util.Objects;",
			"C:\\world\\stack\\projects\\stax\\src",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\projects\\stax\\src\\main\\haxe\\stx\\io\\json",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\tests\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\dev\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\dev\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks\\core\\cogs",
			"import com.sf.Assert;",
			"C:\\world\\stack\\projects\\troyworks\\src\\com",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\tests\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3",
			"C:\\world\\stack\\projects\\troyworks\\unit\\test",
			"C:\\world\\stack\\projects\\troyworks\\src",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks\\core",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Json",
			"TranscodeJValue\\.getExtractorFor\\(",
			"Type\\.className",
			"Transcodes\\.get",
			"public static",
			"JObject",
			"Map",
			"Stx",
			"foldl",
			"Map",
			"testEventuals",
			"testEventualsFailure9",
			"testEventualsFailure10",
			"trace",
			"getkeyO",
			"keyO",
			"valueMap",
			"value",
			"valueH",
			"keyEq",
			"keyE",
			"on add",
			"add",
			"bucketFor",
			"valueS",
			"show",
			"add",
			"bucketFor",
			"set",
			"Eq",
			"TNu",
			"map\\(\\)",
			"defaults",
			"error",
			"throw",
			"get",
			"valueOrder",
			"keySh",
			"valueE",
			"Map",
			"UrlE",
			"TestC",
			"StringsTest",
			"stx.functional.PartialFunctionExtensions;",
			"stx.ds.ifs.FoldableExtensions;",
			"Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the\n distribution.\n\n THIS SOFTWARE IS PROVIDED BY SOCIAL MEDIA NETWORKS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SOCIAL MEDIA NETWORKS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
			"stx.Iterables",
			"zip",
			"Iterables",
			"Iterable",
			"using stx.Iterables",
			"zip",
			"Filters",
			"LogL",
			"forAll",
			"find",
			"i",
			"isEm",
			"a",
			"appen",
			"inter",
			"existsP",
			"foldl",
			"on foldl",
			"foldl",
			"foldl1",
			"contains",
			"cont",
			"exists",
			"lift",
			"rotate",
			"a2",
			"appen",
			"init",
			"x",
			"Filter",
			"empt",
			"Functions",
			"drop",
			"flat",
			"copy",
			"on create",
			"create",
			"open",
			"load",
			"getMapFor",
			"Options",
			"add",
			"valEqual",
			"key",
			"keyEqual",
			"key",
			"keyEq",
			"keyEw",
			"keyEqual",
			"keyH",
			"keyHas",
			"trace",
			"tra",
			"Array",
			"Prelude.Arrays",
			"Prelude.Iterables",
			"IterableLambda",
			"ArrayLambda",
			"La",
			"equ",
			"getE",
			"Equal.get",
			"keyE",
			"using",
			"Equal.getEqualFor",
			"elements",
			"elem",
			"elements",
			"rebal",
			"_map",
			"_(\\w\\w+)",
			"_m",
			"_(\\w\\w+)",
			"_\\w\\w",
			"_",
			"_key",
			"size",
			"keyMap",
			"tool",
			"keyMap",
			"bucketFor",
			"addAll"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"Extractor.getExtractorForType(",
			"Type.getClassName",
			"Transcodes.transcoders.get",
			"static public",
			"using stx.functional.PartialFunctions;",
			"stx.ds.Foldables;",
			"valueEqual",
			"val",
			"value",
			"Prelude.SArrays",
			"Prelude.SIterables",
			"Prelude.Iterables",
			"Prelude.Arrays",
			"Equal.getEqualFor",
			"Equal.get",
			"$1",
			"StxMacro",
			"Prelude",
			"mapR",
			"",
			"foreachR",
			"Eventual",
			"stx.plus",
			"SCore.unfold\nSCore.unfold",
			"SCore.unfold",
			"SCore.tool",
			"SCore.error",
			"import SCore;",
			"using SCore;",
			"static public",
			"Options.create",
			"Step",
			"static public",
			"BinaryTree",
			"failure",
			"success",
			"Promise",
			"WorldState",
			"js.io.AbstractIFrameIO",
			"IFrameIO",
			"package stx.js",
			"using stx.Prelude;",
			"import stx.Prelude;",
			"stx.Strings;",
			"stx.Objects;",
			"stx.util.Objects;",
			"into",
			"override private function get_prefix	",
			"override public function prefix",
			"get_length	",
			"prefix	",
			"private function get_length	",
			"element",
			"length",
			"stx.Tuple",
			"untyped __this__",
			"generateStatement",
			"if(err!=null){cb(err);return;}",
			"/",
			"redis",
			"$1,",
			"-cp $1",
			"/",
			"\\\\",
			"simpleState",
			"initState",
			"CogEvent->Dynamic",
			"initState",
			"@AsyncTest",
			"//@AsyncTest",
			"@AsyncTest",
			"currentState",
			"static public",
			"'anonymous'",
			"$1;",
			"$1",
			"import com.sf.Assert;",
			"using com.sf.Assert;",
			"import com.sf.Assert;",
			"compare",
			"hsmIsActive",
			"this.execute($1,$2)",
			"Assert.isNotNull($1)",
			"Assert.isNotNull($1);",
			"Assert.isNotNull(&1);",
			"sOk($1)",
			"sOk()",
			"null",
			"States.nil",
			"public static var nil",
			"this == nil",
			"noop",
			"states",
			"asState",
			"(fn,name,?pos){\\n\\t\\t$1name,pos);",
			"StateMachine.asState($1.execute($2));",
			"asState",
			"super(fn == null ? nil : fn,pos);",
			"new(fn,?pos:PosInfos)",
			"Raw.isInState(this,$1);",
			"return Raw.isInState",
			"return isInState",
			"Raw.tran(this,$1);\nreturn Raw.isInState",
			"Raw.tran(this,$1);\nRaw.isInState",
			"Raw.tran(this,$1);",
			"Raw.requestTranNoInit(this,$1);",
			"Raw.requestTranNoInit($1);",
			"requestTranNoInit",
			"tran",
			"isEmpty():Bool{",
			"requestTranNoInitRaw",
			"tran_raw",
			"State",
			") { Warning(\"Null call\").log(); return null; };",
			") { Warning(\"Null call\").log(); return null };",
			"equals",
			"$1.execute($2);",
			"new AbstractMethodError",
			"State",
			"Options.toOption($1)",
			"Selector",
			"__internal__",
			"call",
			"Option<$1>",
			"hsm_currentState",
			"heart",
			"//@Test",
			"stateMap"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 214.0
	},
	"output.haxe":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"src/main/haxe/stx/ds/plus/Hasher.hx"
			],
			[
				"jslint",
				"/C/world/stack/os/win/prg/sublime2/Data/Packages/sublime-jslint/sublime-jslint.sublime-settings"
			],
			[
				"redis.hx",
				"src/haxe/db/om/store/Redis.hx"
			],
			[
				"config",
				"popcorn/util/RedisAdminUI/Web.config"
			],
			[
				"session",
				"popcorn/HaXe/src/com/sf/auth/Session.hx"
			],
			[
				"w",
				"popcorn/util/RedisAdminUI/Web.config"
			],
			[
				"serve",
				"popcorn/HaXe/src/com/sf/app/popcorn/site/Serve.hx"
			],
			[
				"main",
				"popcorn/Main.hx"
			],
			[
				"we",
				"popcorn/util/RedisAdminUI/Web.config"
			],
			[
				"unser",
				"std/haxe/Unserializer.hx"
			],
			[
				"serve.",
				"popcorn/HaXe/src/com/sf/app/popcorn/site/Serve.hx"
			],
			[
				"redis",
				"popcorn/dep/hx-node-redis/src/js/node/redis/Redis.hx"
			],
			[
				"user",
				"popcorn/HaXe/src/com/sf/app/popcorn/schema/user/User.hx"
			],
			[
				"user.",
				"popcorn/HaXe/src/com/realstrategic/User.hx"
			],
			[
				"accou",
				"popcorn/HaXe/src/com/sf/app/popcorn/schema/user/Account.hx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 301.0,
	"status_bar_visible": true
}
