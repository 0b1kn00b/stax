package ;

import Prelude;
import stx.Arrays;
import stx.Bools;
import stx.concurrent.Actor;
import stx.core.Initializable;
import stx.Dates;
import stx.ds.BinaryTree;
import stx.ds.Collection;
import stx.ds.Group;
import stx.ds.Iteratee;
import stx.ds.List;
import stx.ds.LList;
import stx.ds.Map;
import stx.plus.Equal;
import stx.plus.Hasher;
import stx.plus.Meta;
import stx.plus.Order;
import stx.plus.Show;
import stx.ds.Range;
import stx.ds.Set;
import stx.ds.Zipper;
import stx.Dynamics;
import stx.Eithers;
import stx.Enums;
import stx.error.AbstractMethodError;
import stx.error.AssertionError;
import stx.Error;
import stx.error.IllegalOverrideError;
import stx.error.NullReferenceError;
import stx.error.OutOfBoundsError;
import stx.Filters;
import stx.framework.Injector;
import stx.functional.Foldable;
import stx.functional.Foldables;
import stx.functional.PartialFunction;
import using stx.functional.PartialFunctions;
import stx.Functions;
import stx.Future;
import stx.Hashes;
import stx.io.Files;
import stx.io.http.Http;
import stx.io.http.HttpJValue;
import stx.io.http.HttpString;
import stx.io.http.HttpTransformer;
import stx.io.http.HttpXml;
import stx.io.json.CollectionsJValue;
import stx.io.json.Json;
import stx.io.json.JValue;
import stx.io.json.JValueExtensions;
import stx.io.json.PrimitivesJValue;
import stx.io.json.Transcode;
import stx.io.json.TranscodeJValue;
import stx.io.json.TranscodeJValueExtensions;
import stx.Iterables;
import stx.Iterators;
#if js
import stx.js.detect.BrowserSupport;
import stx.js.detect.Host;
import stx.js.dom.DomExtensions;
import stx.js.dom.HTMLDocumentExtensions;
import stx.js.dom.HTMLElementExtensions;
import stx.js.dom.HTMLEventExtensions;
import stx.js.dom.Quirks;
import stx.js.Dom;
import stx.js.Env;
import stx.js.io.IFrameIO;
import stx.js.text.html.HTMLParser;
#end
import stx.Lenses;
import stx.Log;
import stx.macro.Lenses;
import stx.macro.LensesMacro;
import stx.macro.Stx;
import stx.math.geom.Point;
import stx.math.geom.PointExtensions;
import stx.math.geom.Vector;
import stx.math.geom.VectorExtensions;
import stx.math.tween.Easing;
import stx.math.tween.Tween;
import stx.math.tween.TweenExtensions;
import stx.Maths;
import stx.Methods;
import stx.net.HttpHeader;
import stx.net.HttpHeaderExtensions;
import stx.net.HttpResponseCode;
import stx.net.HttpResponseCodeExtensions;
import stx.net.Url;
import stx.net.UrlExtensions;
import stx.Objects;
import stx.Options;
import stx.Pepsi;
import stx.Predicates;
import stx.Prelude;
import stx.Promise;
import stx.reactive.Arrows;
import stx.reactive.Collections;
import stx.reactive.Reactive;
import stx.reactive.SignalBool;
import stx.reactive.SignalCollection;
import stx.reactive.SignalCollectionExtensions;
import stx.reactive.SignalFloat;
import stx.reactive.SignalInt;
import stx.reactive.Signals;
import stx.reactive.SignalSignal;
import stx.reactive.StreamBool;
import stx.reactive.Streams;
import stx.reactive.StreamStream;
import stx.Reader;
import stx.rtti.RTypes;
import stx.States;
import stx.Strings;
import stx.test.Assert;
import stx.test.Assertation;
import stx.test.Dispatcher;
import stx.test.mock.Mock;
import stx.test.MustMatcherExtensions;
import stx.test.MustMatchers;
import stx.test.resources.BCollectionTester;
import stx.test.Runner;
import stx.test.TestCase;
import stx.test.TestFixture;
import stx.test.TestHandler;
import stx.test.TestResult;
import stx.test.ui.common.ClassResult;
import stx.test.ui.common.FixtureResult;
import stx.test.ui.common.HeaderDisplayMode;
import stx.test.ui.common.IReport;
import stx.test.ui.common.PackageResult;
import stx.test.ui.common.ReportTools;
import stx.test.ui.common.ResultAggregator;
import stx.test.ui.common.ResultStats;
import stx.test.ui.Report;
import stx.test.ui.text.HtmlReport;
import stx.test.ui.text.PlainTextReport;
import stx.test.ui.text.PrintReport;
import stx.time.Clock;
import stx.time.ScheduledExecutor;
import stx.time.Timer;
import stx.Time;
import stx.Transformer;
import stx.Tuples;
import stx.util.Guid;
import stx.util.OrderExtension;
import stx.Util;

@IgnoreCover
class AllClasses
{
@IgnoreCover
	public static function main():AllClasses {return new AllClasses();}
@IgnoreCover
	public function new(){trace('This is a generated main class');}
}

